import './Tasks.css'
import { useReducer, useState } from 'react';

function Task (title: string, key: number, taskEditor: Function) {
    return (
    <li className='task'>
         <input className="task-input" value={title} placeholder={title} onChange={(e) => taskEditor({type: "edit", value: e.target.value, index: key})}/>
    </li>
    )
}

type taskEditAction = { type: "insert"; value: string } | { type: "delete"; index:number } | { type: "edit"; index: number; value: string};

function taskReducer(state: string[], action: taskEditAction): string[] {
    switch(action.type) {
        case "insert":
            state.push("New Task")
            return state
        case "delete":
            state.push("New Task")
            return state
        case "edit":
            return state.map((task, index) => index === action.index ? action.value : task)
        default:
            throw new Error()
    }
}

function Tasks() {
    const [viewBoard,setViewBoard] = useState<boolean>(false)
    const [activeTask,setActiveTask] = useState<number>(0)
    const [taskList,editTaskList] = useReducer<string[]>(taskReducer,["one","two"])

    return (
        <>
        {
            !viewBoard ?
        (
        <div className={'tasks-container'} onClick={()=>setViewBoard(true)}>
            <div className='task'>{taskList[activeTask] || "Add Task"} </div>
        </div>
        ) :
        (
        <>
        <div style={{position: "absolute", left: "0", right: "0", top: "0", bottom: "0", zIndex: "2"}} onClick={()=>setViewBoard(false)}></div>
        <div className={'tasks-container visible'}>
            <button className='task-add' onClick={()=>taskList.push("New Task")}>+</button>
            { taskList && taskList.map((_,index)=><Task title={taskList[index]} key={index} taskEditer={editTaskList}/>) }
            <button className='task-back' onClick={()=>setViewBoard(false)}>x</button>
        </div>
        </>
        )
        }
        </>
    )
}

export default Tasks
